0000-                  7
0000-                  8           .include ../../../../include/z180_defs.asm
0000-            I     1       ; ------------------------------------
0000-            I     2       ; Z180 constants
0000-            I     3       ; ------------------------------------
0000-            I     4
0000-            I     5       ; ASCI
0000-            I     6       ; ----------
0000-            I     7
0000-            I     8       ; ASCI Control Register A 0 (CNTLA0: 00H)
0000-            I     9       CNTLA0         .equ $00
0000-            I    10
0080-            I    11       CNTLA0_MPE     .equ $80
0040-            I    12       CNTLA0_RE      .equ $40
0020-            I    13       CNTLA0_TE      .equ $20
0010-            I    14       CNTLA0_RTS0    .equ $10
0008-            I    15       CNTLA0_EFR     .equ $08
0004-            I    16       CNTLA0_MOD2    .equ $04
0002-            I    17       CNTLA0_MOD1    .equ $02
0001-            I    18       CNTLA0_MOD0    .equ $01
0000-            I    19
0000-            I    20       ; ASCI Control Register A 1 (CNTLA1: 01H)
0001-            I    21       CNTLA1         .equ $01
0000-            I    22
0080-            I    23       CNTLA1_MPE     .equ $80
0040-            I    24       CNTLA1_RE      .equ $40
0020-            I    25       CNTLA1_TE      .equ $20
0010-            I    26       CNTLA1_CKA1D   .equ $10
0008-            I    27       CNTLA1_EFR     .equ $08
0004-            I    28       CNTLA1_MOD2    .equ $04
0002-            I    29       CNTLA1_MOD1    .equ $02
0001-            I    30       CNTLA1_MOD0    .equ $01
0000-            I    31
0000-            I    32       ; ASCI Control Register B 0 (CNTLB0: 02H)
0002-            I    33       CNTLB0         .equ $02
0000-            I    34
0080-            I    35       CNTLB0_MPBT    .equ $80
0040-            I    36       CNTLB0_MP      .equ $40
0020-            I    37       CNTLB0_CTS     .equ $20
0010-            I    38       CNTLB0_PEO     .equ $10
0008-            I    39       CNTLB0_DR      .equ $08
0004-            I    40       CNTLB0_SS2     .equ $04
0002-            I    41       CNTLB0_SS1     .equ $02
0001-            I    42       CNTLB0_SS0     .equ $01
0000-            I    43
0000-            I    44       ; ASCI Control Register B 1 (CNTLB1: 03H)
0003-            I    45       CNTLB1         .equ $03
0000-            I    46
0080-            I    47       CNTLB1_MPBT    .equ $80
0040-            I    48       CNTLB1_MP      .equ $40
0020-            I    49       CNTLB1_CTS     .equ $20
0010-            I    50       CNTLB1_PEO     .equ $10
0008-            I    51       CNTLB1_DR      .equ $08
0004-            I    52       CNTLB1_SS2     .equ $04
0002-            I    53       CNTLB1_SS1     .equ $02
0001-            I    54       CNTLB1_SS0     .equ $01
0000-            I    55
0000-            I    56       ; ASCI Status Register 0 (STAT0: 04H)
0004-            I    57       STAT0          .equ $04
0000-            I    58
0080-            I    59       STAT0_RDRF     .equ $80
0040-            I    60       STAT0_OVRN     .equ $40
0020-            I    61       STAT0_PE       .equ $20
0010-            I    62       STAT0_FE       .equ $10
0008-            I    63       STAT0_RIE      .equ $08
0004-            I    64       STAT0_DCD0     .equ $04
0002-            I    65       STAT0_TDRE     .equ $02
0001-            I    66       STAT0_TIE      .equ $01
0000-            I    67
0000-            I    68       ; ASCI Status Register 1 (STAT1: 05H)
0005-            I    69       STAT1          .equ $05
0000-            I    70
0080-            I    71       STAT1_RDRF     .equ $80
0040-            I    72       STAT1_OVRN     .equ $40
0020-            I    73       STAT1_PE       .equ $20
0010-            I    74       STAT1_FE       .equ $10
0008-            I    75       STAT1_RIE      .equ $08
0004-            I    76       STAT1_CTS1E    .equ $04
0002-            I    77       STAT1_TDRE     .equ $02
0001-            I    78       STAT1_TIE      .equ $01
0000-            I    79
0000-            I    80       ; ASCI Transmit Data Register Ch. 0 (TDR0: 06H)
0006-            I    81       TDR0           .equ $06
0000-            I    82
0000-            I    83       ; ASCI Transmit Data Register Ch. 1 (TDR1: 07H)
0007-            I    84       TDR1           .equ $07
0000-            I    85
0000-            I    86       ; ASCI Receive Data Register Ch. 0 (RDR0: 08H)
0008-            I    87       RDR0           .equ $08
0000-            I    88
0000-            I    89       ; ASCI Receive Data Register Ch. 1 (RDR1: 09H)
0009-            I    90       RDR1           .equ $09
0000-            I    91
0000-            I    92       ; ASCI0 Extension Control Register 0 (ASEXT0: 12H)
0012-            I    93       ASEXT0         .equ $12
0000-            I    94
0080-            I    95       ASEXT0_RDRFI   .equ $80
0040-            I    96       ASEXT0_DCD0D   .equ $40
0020-            I    97       ASEXT0_CTS0D   .equ $20
0010-            I    98       ASEXT0_X1      .equ $10
0008-            I    99       ASEXT0_BRG0    .equ $08
0004-            I   100       ASEXT0_BRKE    .equ $04
0002-            I   101       ASEXT0_BRK     .equ $02
0001-            I   102       ASEXT0_SBRK    .equ $01
0000-            I   103
0000-            I   104       ; ASCI1 Extension Control Register 1 (ASEXT1: 13H)
0013-            I   105       ASEXT1         .equ $13
0000-            I   106
0080-            I   107       ASEXT1_RDRFI   .equ $80
0010-            I   108       ASEXT1_X1      .equ $10
0008-            I   109       ASEXT1_BRG1    .equ $08
0004-            I   110       ASEXT1_BRKE    .equ $04
0002-            I   111       ASEXT1_BRK     .equ $02
0001-            I   112       ASEXT1_SBRK    .equ $01
0000-            I   113
0000-            I   114       ; ASCI0 Time Constant Low Register (ASTC0L : 1AH)
001A-            I   115       ASTC0L         .equ $1A
0000-            I   116       ; ASCI0 Time Constant High Register (ASTC0H: 1BH)
001B-            I   117       ASTC0H         .equ $1B
0000-            I   118       ; ASCI1 Time Constant Low Register (ASTC1L : 1AH)
001C-            I   119       ASTC1L         .equ $1C
0000-            I   120       ; ASCI1 Time Constant High Register (ASTC1H: 1BH)
001D-            I   121       ASTC1H         .equ $1D
0000-            I   122
0000-            I   123       ; CSI/0
0000-            I   124       ; ------------------------------------
0000-            I   125
0000-            I   126       ; CSI/O Control Register (CNTR: 0AH)
000A-            I   127       CNTR           .equ $0A
0000-            I   128
0080-            I   129       CNTR_EF        .equ $80
0040-            I   130       CNTR_EIE       .equ $40
0020-            I   131       CNTR_RE        .equ $20
0010-            I   132       CNTR_TE        .equ $10
0004-            I   133       CNTR_SS2       .equ $04
0002-            I   134       CNTR_SS1       .equ $02
0001-            I   135       CNTR_SS0       .equ $01
0000-            I   136
0000-            I   137       ; CSI/O Transmit/Receive Data Register (TRD: 0BH)
000B-            I   138       TRDR           .equ $0B
0000-            I   139
0000-            I   140       ; Timer
0000-            I   141       ; ------------------------------------
0000-            I   142
0000-            I   143       ; Data Register Ch 0 L (TMDR0L: 0CH)
000C-            I   144       TMDR0L         .equ $0C
0000-            I   145       ; Data Register Ch 0 H (TMDR0H: 0DH)
000D-            I   146       TMDR0H         .equ $0D
0000-            I   147       ; Reload Register Ch 0 L (RLDR0L: OEH)
000E-            I   148       RLDR0L         .equ $0E
0000-            I   149       ; Reload Register Ch 0 H (RLDR0H: 0FH)
000F-            I   150       RLDR0H         .equ $0F
0000-            I   151
0000-            I   152       ; Timer Control Register (TCR: 10H)
0010-            I   153       TCR            .equ $10
0000-            I   154
0080-            I   155       TCR_TF1        .equ $80
0040-            I   156       TCR_TF0        .equ $40
0020-            I   157       TCR_TE1        .equ $20
0010-            I   158       TCR_TE0        .equ $10
0008-            I   159       TCR_TOC1       .equ $08
0004-            I   160       TCR_TOC0       .equ $04
0002-            I   161       TCR_TDE1       .equ $02
0001-            I   162       TCR_TDE0       .equ $01
0000-            I   163
0000-            I   164       ; Data Register Ch 1 L (TMDR1L: 14h)
0014-            I   165       TMDR1L         .equ $14
0000-            I   166       ; Data Register Ch 1 H (TMDR1H: 15H)
0015-            I   167       TMDR1H         .equ $15
0000-            I   168       ; Reload Register Ch 1 L (RLDR1L: 16H)
0016-            I   169       RLDR1L         .equ $16
0000-            I   170       ; Reload Register Ch 1 H (RLDR1H: 17H)
0017-            I   171       RLDR1H         .equ $17
0000-            I   172
0000-            I   173       ; Others
0000-            I   174       ; ------------------------------------
0000-            I   175
0000-            I   176       ; Clock Multiplier Register (CMR: 1EH)
001E-            I   177       CMR            .equ $1E
0000-            I   178
0080-            I   179       CMR_X2         .equ $80
0000-            I   180
0000-            I   181       ; Free Running Counter (FRC: 18H)
0018-            I   182       FRC            .equ $18
0000-            I   183
0000-            I   184       ; CPU Control Register (CCR: 1FH)
001F-            I   185       CCR            .equ $1F
0080-            I   186       CCR_CD         .equ $80
0040-            I   187       CCR_SB1        .equ $40
0020-            I   188       CCR_BREXT      .equ $20
0010-            I   189       CCR_LNPHI      .equ $10
0008-            I   190       CCR_SB2        .equ $08
0004-            I   191       CCR_LNIO       .equ $04
0002-            I   192       CCR_LNCPU      .equ $02
0001-            I   193       CCR_LNAD       .equ $01
0000-            I   194
0000-            I   195       ; DMA
0000-            I   196       ; ---------------------------------------------------------------------------
0000-            I   197
0000-            I   198
0000-            I   199       ; DMA/WAIT Control Register (DCNTL: 32H)
0000-            I   200
0000-            I   201       ; INT
0000-            I   202       ; ---------------------------------------------------------------------------
0000-            I   203
0000-            I   204       ; Interrupt Vector Low Register (IL: 33H)
0033-            I   205       IL              .equ $33
0000-            I   206
0000-            I   207       ; INT/TRAP Control Register (ITC: 34H)
0034-            I   208       ITC             .equ $34
0000-            I   209
0080-            I   210       ITC_TRAP        .equ $80
0040-            I   211       ITC_UFO         .equ $40
0004-            I   212       ITC_ITE2        .equ $04
0002-            I   213       ITC_ITE1        .equ $02
0001-            I   214       ITC_ITE0        .equ $01
0000-            I   215
0000-            I   216
0000-            I   217       ; Refresh
0000-            I   218       ; ---------------------------------------------------------------------------
0000-            I   219
0000-            I   220       ; Refresh Control Register (RCR: 36H)
0036-            I   221       RCR            .equ $36
0080-            I   222       RCR_REFE       .equ $80
0040-            I   223       RCR_REFW       .equ $40
0002-            I   224       RCR_CYC1       .equ $02
0001-            I   225       RCR_CYC0       .equ $01
0000-            I   226
0000-            I   227       ; MMU
0000-            I   228       ; ---------------------------------------------------------------------------
0000-            I   229
0000-            I   230       ; MMU Common Base Register (CBR: 38H)
0038-            I   231       CBR            .equ $38
0000-            I   232       ; MMU Bank Base Register (BBR: 39H)
0039-            I   233       BBR            .equ $39
0000-            I   234       ; MMU Common/Bank Register (CBAR: 3AH)
003A-            I   235       CBAR           .equ $3A
0000-            I   236       ; I/O
0000-            I   237       ; ---------------------------------------------------------------------------
0000-            I   238
0000-            I   239       ; Operation Mode Control Register (OMCR: 3EH)
003E-            I   240       OMCR           .equ $3E
0000-            I   241
0080-            I   242       OMCR_M1E       .equ $80
0040-            I   243       OMCR_M1TE      .equ $40
0000-            I   244       ;OMCR_M1E       .equ $20
0000-            I   245
0000-            I   246       ; I/O Control Register (ICR: 3FH)
003F-            I   247       ICR            .equ $3F
0000-            I   248
0080-            I   249       ICR_IOA7       .equ $80
0040-            I   250       ICR_IOA6       .equ $40
0020-            I   251       ICR_IOSTP      .equ $20
0000-                  9
0000-                 10           .org $0000
0000-C3 00 01         11 (  9)     jp mreset        ; RESET
0003-                 12
0038-                 13           .org $0038
0038-C3 C2 01         14 (  9)     jp int_noop    ; INT0
003B-                 15
0066-                 16           .org $0066
0066-C3 C2 01         17 (  9)     jp int_noop    ; NMI
0069-                 18
0069-                 19       ; interrupt vector table
0080-                 20           .org $0080
0080-81 01            21           .dw int_kbd    ; INT1
0082-C2 01            22           .dw int_noop    ; INT2
0084-C2 01            23           .dw int_noop    ; PRT0
0086-C2 01            24           .dw int_noop    ; PRT1
0088-C2 01            25           .dw int_noop    ; DMA0
008A-C2 01            26           .dw int_noop    ; DMA1
008C-C2 01            27           .dw int_noop    ; CSIO
008E-C2 01            28           .dw int_noop   ; ASCI0
0090-C2 01            29           .dw int_noop    ; ASCI1
0092-                 30
0100-                 31           .org $0100
0100-                 32       mreset:
0100-                 33
0100-F3               34 (  3)     di ; disable interrupts
0101-                 35
0101-                 36           ; CMR_X2 : clock * 2 => xtal 16Mhz ---> 32Mhz, phi 8Mhz --> 16Mhz
0101-                 37           ;ld a,CMR_X2
0101-                 38           ;out0 (CMR),a
0101-                 39
0101-                 40           ; CCR_CD : phi = XTAL/1 => phi 16Mhz ---> 32Mhz !!!
0101-                 41           ;ld a,CCR_CD
0101-                 42           ;out0 (CCR),a
0101-                 43
0101-3E 00            44 (  6)     ld  a,0
0103-ED 39 36         45 ( 13)     out0 (RCR),a    ; Refresh disable
0106-                 46
0106-                 47           ; MMU
0106-                 48           ; $F000-$FFFF = VDU ( $20000 - $20FFF ) - Common Area 1
0106-                 49           ; $2000-$EFFF = RAM ( $80000 - $8EFFF ) - Bank Area
0106-                 50           ; $0000-$1FFF = ROM ( $00000 - $01FFF ) - Common Area 0
0106-                 51
0106-3E F2            52 (  6)     ld a,$F2 ; Common Area 1 = $F000-$FFFF, Bank Area 1 =  $2000-$EFFF
0108-ED 39 3A         53 ( 13)     out0 (CBAR),a
010B-3E 11            54 (  6)     ld a,$11 ; Common Area Base = $20000
010D-ED 39 38         55 ( 13)     out0 (CBR),a
0110-3E 7E            56 (  6)     ld a,$7E ; Bank Area Base = $80000
0112-ED 39 39         57 ( 13)     out0 (BBR),a
0115-                 58
0115-                 59           ; Stack pointer = $10FF
0115-31 FF 20         60 (  9)     ld sp,$20FF
0118-                 61
0118-CD 8B 01         62 ( 16)     call asci1_init
011B-                 63
011B-                 64           ; setup interupts
011B-ED 56            65 (  6)     im 1    ; interrupt mode 1
011D-3E 00            66 (  6)     ld a,0  ; interrupts high order byte : 00H
011F-ED 47            67 (  6)     ld i,a
0121-3E 80            68 (  6)     ld a,0b10000000 ; interrupts low order byte : 80H
0123-ED 39 33         69 ( 13)     out0 (IL),a
0126-                 70
0126-                 71           ; enable INT1
0126-3E 02            72 (  6)     ld a,ITC_ITE1
0128-ED 39 34         73 ( 13)     out0 (ITC),a
012B-                 74
012B-FB               75 (  3)    ei      ; enable interrupts
012C-                 76
0080-                 77       KBD_DATA    .equ $80
0081-                 78       KBD_STATUS  .equ $81
012C-                 79
012C-                 80       ;RTC_SECOND_1 .equ $90
0090-                 81       RTC_SECOND_1 .equ $90
0091-                 82       RTC_SECOND_10 .equ $91
0092-                 83       RTC_MINUTE_1 .equ $92
0093-                 84       RTC_MINUTE_10 .equ $93
0094-                 85       RTC_HOUR_1 .equ $94
0095-                 86       RTC_HOUR_10 .equ $95
012C-                 87
012C-                 88
012C-                 89       main:
012C-21 C4 01         90 (  9)     ld hl,str_welcome ; show welcome message
012F-CD A5 01         91 ( 16)     call asci1_puts
0132-                 92
0132-                 93       loop:
0132-                 94
0132-21 D8 01         95 (  9)  ld hl,str_home
0135-CD A5 01         96 ( 16)  call asci1_puts
0138-                 97
0138-ED 38 95         98 ( 12)  in0 a,(RTC_HOUR_10)
013B-E6 03            99 (  6)  and a,$03
013D-C6 30           100 (  6)  add a,'0'
013F-CD B5 01        101 ( 16)  call asci1_putc
0142-                102
0142-ED 38 94        103 ( 12)  in0 a,(RTC_HOUR_1)
0145-E6 0F           104 (  6)  and a,$0f
0147-C6 30           105 (  6)  add a,'0'
0149-CD B5 01        106 ( 16)  call asci1_putc
014C-                107
014C-3E 3A           108 (  6)  ld a,':'
014E-CD B5 01        109 ( 16)  call asci1_putc
0151-                110
0151-ED 38 93        111 ( 12)  in0 a,(RTC_MINUTE_10)
0154-E6 0F           112 (  6)  and a,$0f
0156-C6 30           113 (  6)  add a,'0'
0158-CD B5 01        114 ( 16)  call asci1_putc
015B-                115
015B-ED 38 92        116 ( 12)  in0 a,(RTC_MINUTE_1)
015E-E6 0F           117 (  6)  and a,$0f
0160-C6 30           118 (  6)  add a,'0'
0162-CD B5 01        119 ( 16)  call asci1_putc
0165-                120
0165-3E 3A           121 (  6)  ld a,':'
0167-CD B5 01        122 ( 16)  call asci1_putc
016A-                123
016A-ED 38 91        124 ( 12)  in0 a,(RTC_SECOND_10)
016D-E6 0F           125 (  6)  and a,$0f
016F-C6 30           126 (  6)  add a,'0'
0171-CD B5 01        127 ( 16)  call asci1_putc
0174-                128
0174-                129
0174-ED 38 90        130 ( 12)  in0 a,(RTC_SECOND_1)
0177-E6 0F           131 (  6)  and a,$0f
0179-C6 30           132 (  6)  add a,'0'
017B-CD B5 01        133 ( 16)  call asci1_putc
017E-                134
017E-                135        ;out0 (KBD_DATA),a
017E-                136         ;  call asci1_getc
017E-                137
017E-                138         ; call asci1_putc
017E-C3 32 01        139 (  9)     jp loop
0181-                140
0181-                141
0181-                142
0181-                143       int_kbd:
0181-F5              144 ( 11)     push af
0182-ED 38 80        145 ( 12)     in0 a,(KBD_DATA)
0185-                146           ;ld a,'K'
0185-CD B5 01        147 ( 16)     call asci1_putc
0188-F1              148 (  9)     pop af
0189-FB              149 (  3)     ei
018A-C9              150 (  9)     ret
018B-                151
018B-                152
018B-                153       ; -----------------------------------------------------------------
018B-                154
018B-                155       ; initialize asci1
018B-                156       asci1_init:
018B-                157
018B-                158           ; RE : Receiver Enable
018B-                159           ; TE : Transmitter Enable
018B-                160           ; MOD2 : 8 bits data ( No parity, 1 stop bit)
018B-3E 64           161 (  6)     ld a,CNTLA1_RE|CNTLA1_TE|CNTLA1_MOD2
018D-ED 39 01        162 ( 13)     out0 (CNTLA1),a
0190-                163
0190-                164           ; DR=0
0190-3E 00           165 (  6)     ld a,0
0192-ED 39 03        166 ( 13)     out0 (CNTLB1),a
0195-                167
0195-                168           ; BRG0 : Enable 16 bit BRG counter
0195-                169           ; X1 ( + DR=0) : Clock mode = /1
0195-3E 18           170 (  6)     ld a,ASEXT1_BRG1|ASEXT1_X1
0197-ED 39 13        171 ( 13)     out0 (ASEXT1),a
019A-                172
019A-                173           ; 9600 bauds : TC=1665 (681H) --> 9603 bauds
019A-                174           ; TC = fphi/(2*baud rate*clock mode) - 2
019A-                175           ; TC = 32000000/(2*9600*1) - 2
019A-3E 81           176 (  6)     ld a,$81
019C-ED 39 1C        177 ( 13)     out0 (ASTC1L),a
019F-3E 06           178 (  6)     ld a,$06
01A1-ED 39 1D        179 ( 13)     out0 (ASTC1H),a
01A4-                180
01A4-C9              181 (  9)     ret
01A5-                182
01A5-                183       ; put a string on asci1
01A5-                184       ; input : (hl) = address of null terminated string
01A5-                185       asci1_puts:
01A5-E5              186 ( 11)     push hl
01A6-F5              187 ( 11)     push af
01A7-                188
01A7-                189       asci1_puts_loop:
01A7-7E              190 (  6)     ld a,(hl)
01A8-F6 00           191 (  6)     or 0
01AA-28 06           192 ( 6+)     jr z,asci1_puts_exit
01AC-CD B5 01        193 ( 16)     call asci1_putc
01AF-23              194 (  4)     inc hl
01B0-18 F5           195 (  8)     jr asci1_puts_loop
01B2-                196
01B2-                197       asci1_puts_exit:
01B2-F1              198 (  9)     pop af
01B3-E1              199 (  9)     pop hl
01B4-C9              200 (  9)     ret
01B5-                201
01B5-                202
01B5-                203
01B5-                204       ; put a char on asci1
01B5-                205       ; input : a = char ascii code
01B5-                206       asci1_putc:
01B5-F5              207 ( 11)     push af
01B6-                208
01B6-                209       asci1_putc_wait:  ; wait for asci0 TX ready
01B6-ED 38 05        210 ( 12)     in0 a,(STAT1) ; TDRE=1 -> empty
01B9-E6 02           211 (  6)     and STAT1_TDRE
01BB-28 F9           212 ( 6+)     jr Z,asci1_putc_wait
01BD-F1              213 (  9)     pop af
01BE-ED 39 07        214 ( 13)     out0 (TDR1),a ; output the char to asci0
01C1-C9              215 (  9)     ret
01C2-                216
01C2-                217
01C2-                218       int_noop:
01C2-FB              219 (  3)     ei
01C3-C9              220 (  9)     ret
01C4-                221
01C4-                222
01C4-1B 5B 32 4A 
     1B 5B 48 54 
     65 73 74 20 
     52 54 43 0D 
     0A 0D 0A 00     223       str_welcome:    .db $1B,"[2J",$1B,"[H","Test RTC",13,10,13,10,0
01D8-1B 5B 48 1B 
     5B 3F 32 35 
     68 00           224       str_home: .db $1B,"[H",$1B,"[?25h",0
2100-                225           .org $2100
2100-                226
2100-                227
